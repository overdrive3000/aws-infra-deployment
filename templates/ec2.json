{
    "Description": "Create a simple EC2 instance and Outuput its ARN",
    "Parameters": {
        "SubnetID": {
            "Description": "VPC Id where the instance must be created",
            "Type": "String"
        },
        "SGId01":{
          "Description": "Security Group ID 01",
          "Type": "String"
        },
        "SGId02":{
          "Description": "Security Group ID 02",
          "Type": "String"
        },
        "WindowsAMIId": {
          "Description": "Windows AMI Id",
          "Default": "ami-4dbcb67d",
          "Type": "String"
        },
        "KeyPairName": {
          "Description": "Key pair to use in the instances",
          "Type": "String"
        },
        "OperatorEMail": {
          "Description": "EMail address to notify CPU high workload",
          "Type": "String",
          "AllowedPattern": "([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)",
          "ConstraintDescription": "must be a valid email address.",
          "Default": "linuxven@gmail.com"
        },
        "WinfilesBucket": {
          "Description": "Bucket to store windows files",
          "Type": "String"
        }
    },
    "Mappings": {
        "AWSInstanceType2Arch" : {
            "t1.micro"    : { "Arch" : "PV64"   },
            "t2.micro"    : { "Arch" : "HVM64"  },
            "t2.small"    : { "Arch" : "HVM64"  },
            "t2.medium"   : { "Arch" : "HVM64"  },
            "m1.small"    : { "Arch" : "PV64"   },
            "m1.medium"   : { "Arch" : "PV64"   },
            "m1.large"    : { "Arch" : "PV64"   },
            "m1.xlarge"   : { "Arch" : "PV64"   },
            "m2.xlarge"   : { "Arch" : "PV64"   },
            "m2.2xlarge"  : { "Arch" : "PV64"   },
            "m2.4xlarge"  : { "Arch" : "PV64"   },
            "m3.medium"   : { "Arch" : "HVM64"  },
            "m3.large"    : { "Arch" : "HVM64"  },
            "m3.xlarge"   : { "Arch" : "HVM64"  },
            "m3.2xlarge"  : { "Arch" : "HVM64"  },
            "c1.medium"   : { "Arch" : "PV64"   },
            "c1.xlarge"   : { "Arch" : "PV64"   },
            "c3.large"    : { "Arch" : "HVM64"  },
            "c3.xlarge"   : { "Arch" : "HVM64"  },
            "c3.2xlarge"  : { "Arch" : "HVM64"  },
            "c3.4xlarge"  : { "Arch" : "HVM64"  },
            "c3.8xlarge"  : { "Arch" : "HVM64"  },
            "c4.large"    : { "Arch" : "HVM64"  },
            "c4.xlarge"   : { "Arch" : "HVM64"  },
            "c4.2xlarge"  : { "Arch" : "HVM64"  },
            "c4.4xlarge"  : { "Arch" : "HVM64"  },
            "c4.8xlarge"  : { "Arch" : "HVM64"  },
            "g2.2xlarge"  : { "Arch" : "HVMG2"  },
            "r3.large"    : { "Arch" : "HVM64"  },
            "r3.xlarge"   : { "Arch" : "HVM64"  },
            "r3.2xlarge"  : { "Arch" : "HVM64"  },
            "r3.4xlarge"  : { "Arch" : "HVM64"  },
            "r3.8xlarge"  : { "Arch" : "HVM64"  },
            "i2.xlarge"   : { "Arch" : "HVM64"  },
            "i2.2xlarge"  : { "Arch" : "HVM64"  },
            "i2.4xlarge"  : { "Arch" : "HVM64"  },
            "i2.8xlarge"  : { "Arch" : "HVM64"  },
            "d2.xlarge"   : { "Arch" : "HVM64"  },
            "d2.2xlarge"  : { "Arch" : "HVM64"  },
            "d2.4xlarge"  : { "Arch" : "HVM64"  },
            "d2.8xlarge"  : { "Arch" : "HVM64"  },
            "hi1.4xlarge" : { "Arch" : "HVM64"  },
            "hs1.8xlarge" : { "Arch" : "HVM64"  },
            "cr1.8xlarge" : { "Arch" : "HVM64"  },
            "cc2.8xlarge" : { "Arch" : "HVM64"  }
        },
        "AWSRegionArch2AMI": {
            "us-east-1"        : {"PV64" : "ami-0f4cfd64", "HVM64" : "ami-0d4cfd66", "HVMG2" : "ami-5b05ba30"},
            "us-west-2"        : {"PV64" : "ami-d3c5d1e3", "HVM64" : "ami-d5c5d1e5", "HVMG2" : "ami-a9d6c099"},
            "us-west-1"        : {"PV64" : "ami-85ea13c1", "HVM64" : "ami-87ea13c3", "HVMG2" : "ami-37827a73"},
            "eu-west-1"        : {"PV64" : "ami-d6d18ea1", "HVM64" : "ami-e4d18e93", "HVMG2" : "ami-72a9f105"},
            "eu-central-1"     : {"PV64" : "ami-a4b0b7b9", "HVM64" : "ami-a6b0b7bb", "HVMG2" : "ami-a6c9cfbb"},
            "ap-northeast-1"   : {"PV64" : "ami-1a1b9f1a", "HVM64" : "ami-1c1b9f1c", "HVMG2" : "ami-f644c4f6"},
            "ap-southeast-1"   : {"PV64" : "ami-d24b4280", "HVM64" : "ami-d44b4286", "HVMG2" : "ami-12b5bc40"},
            "ap-southeast-2"   : {"PV64" : "ami-ef7b39d5", "HVM64" : "ami-db7b39e1", "HVMG2" : "ami-b3337e89"},
            "sa-east-1"        : {"PV64" : "ami-5b098146", "HVM64" : "ami-55098148", "HVMG2" : "NOT_SUPPORTED"},
            "cn-north-1"       : {"PV64" : "ami-bec45887", "HVM64" : "ami-bcc45885", "HVMG2" : "NOT_SUPPORTED"}
        }
    },
    "Resources": {
      "NotificationTopic": {
        "Type": "AWS::SNS::Topic",
        "Properties": {
          "Subscription": [ { "Endpoint": { "Ref": "OperatorEMail" }, "Protocol": "email" } ]
        }
      },
      "WindowsProfile": {
        "Type": "AWS::IAM::InstanceProfile",
        "Properties": {
          "Path": "/",
          "Roles": ["s3-role"]
        }
      },
      "Windows01": {
        "Type": "AWS::EC2::Instance",
        "Properties": {
          "InstanceType": "t2.micro",
          "IamInstanceProfile": { "Ref": "WindowsProfile" },
          "SecurityGroupIds": [{ "Ref": "SGId02" }],
          "ImageId" : { "Ref": "WindowsAMIId" },
          "SubnetId": {"Ref": "SubnetID"},
          "KeyName": { "Ref": "KeyPairName" },
          "UserData": {
            "Fn::Base64": {
              "Fn::Join": [ "", [
                  "<powershell>Read-S3Object -BucketName ", { "Ref": "WinfilesBucket" }, " -Key CPUSTRES.zip -File c:\\CPUSTRES.zip</powershell>"
                ]
              ]
            }
          }
        }
      },
      "Windows02": {
        "Type": "AWS::EC2::Instance",
        "Properties": {
          "InstanceType": "t2.micro",
          "IamInstanceProfile": { "Ref": "WindowsProfile" },
          "SecurityGroupIds": [{ "Ref": "SGId02" }],
          "ImageId" : { "Ref": "WindowsAMIId" },
          "SubnetId": {"Ref": "SubnetID"},
          "KeyName": { "Ref": "KeyPairName" },
          "UserData": {
            "Fn::Base64": {
              "Fn::Join": [ "", [
                  "<powershell>Read-S3Object -BucketName ", { "Ref": "WinfilesBucket" }, " -Key CPUSTRES.zip -File c:\\CPUSTRES.zip</powershell>"
                ]
              ]
            }
          }
        }
      },
      "Windows03": {
        "Type": "AWS::EC2::Instance",
        "Properties": {
          "InstanceType": "t2.micro",
          "IamInstanceProfile": { "Ref": "WindowsProfile" },
          "SecurityGroupIds": [{ "Ref": "SGId02" }],
          "ImageId" : { "Ref": "WindowsAMIId" },
          "SubnetId": {"Ref": "SubnetID"},
          "KeyName": { "Ref": "KeyPairName" },
          "UserData": {
            "Fn::Base64": {
              "Fn::Join": [ "", [
                  "<powershell>Read-S3Object -BucketName ", { "Ref": "WinfilesBucket" }, " -Key CPUSTRES.zip -File c:\\CPUSTRES.zip</powershell>"
                ]
              ]
            }
          }
        }
      },
      "CPUAlarmHighWindows01": {
        "Type": "AWS::CloudWatch::Alarm",
        "Properties": {
          "AlarmDescription": "Sent notification if CPU > 85% for 5 minutes",
          "MetricName": "CPUUtilization",
          "Namespace": "AWS/EC2",
          "Statistic": "Average",
          "Period": "300",
          "EvaluationPeriods": "1",
          "Threshold": "85",
          "AlarmActions": [ { "Ref": "NotificationTopic" } ],
          "Dimensions": [
            {
              "Name": "InstanceId",
              "Value": { "Ref": "Windows01" } 
            }
          ],
          "ComparisonOperator": "GreaterThanThreshold"
        }
      },
      "CPUAlarmHighWindows02": {
        "Type": "AWS::CloudWatch::Alarm",
        "Properties": {
          "AlarmDescription": "Sent notification if CPU > 85% for 5 minutes",
          "MetricName": "CPUUtilization",
          "Namespace": "AWS/EC2",
          "Statistic": "Average",
          "Period": "300",
          "EvaluationPeriods": "1",
          "Threshold": "85",
          "AlarmActions": [ { "Ref": "NotificationTopic" } ],
          "Dimensions": [
            {
              "Name": "InstanceId",
              "Value": { "Ref": "Windows02" } 
            }
          ],
          "ComparisonOperator": "GreaterThanThreshold"
        }
      },
      "CPUAlarmHighWindows03": {
        "Type": "AWS::CloudWatch::Alarm",
        "Properties": {
          "AlarmDescription": "Sent notification if CPU > 85% for 5 minutes",
          "MetricName": "CPUUtilization",
          "Namespace": "AWS/EC2",
          "Statistic": "Average",
          "Period": "300",
          "EvaluationPeriods": "1",
          "Threshold": "85",
          "AlarmActions": [ { "Ref": "NotificationTopic" } ],
          "Dimensions": [
            {
              "Name": "InstanceId",
              "Value": { "Ref": "Windows03" } 
            }
          ],
          "ComparisonOperator": "GreaterThanThreshold"
        }
      }
    },
    "Outputs": {
        "Windows01Id": {
            "Description": "InstanceId of the newly created EC2 instance",
            "Value" : { "Ref" : "Windows01" }
        },
        "Windows01IPAddress": {
            "Description" : "IP address of the newly created EC2 instance",
            "Value": {"Fn::GetAtt": ["Windows01", "PublicIp"]}
        },
        "Windows01ARN": {
            "Description": "Instance ARN",
            "Value": {"Fn::Join":["",["arn:aws:ec2:us-west-2:",{ "Ref": "AWS::AccountId" },":instance/",{ "Ref" : "Windows01" } ] ] }
        },
        "Windows02Id": {
            "Description": "InstanceId of the newly created EC2 instance",
            "Value" : { "Ref" : "Windows02" }
        },
        "Windows02IPAddress": {
            "Description" : "IP address of the newly created EC2 instance",
            "Value": {"Fn::GetAtt": ["Windows02", "PublicIp"]}
        },
        "Windows02ARN": {
            "Description": "Instance ARN",
            "Value": {"Fn::Join":["",["arn:aws:ec2:us-west-2:",{ "Ref": "AWS::AccountId" },":instance/",{ "Ref" : "Windows02" } ] ] }
        },
        "Windows03Id": {
            "Description": "InstanceId of the newly created EC2 instance",
            "Value" : { "Ref" : "Windows03" }
        },
        "Windows03IPAddress": {
            "Description" : "IP address of the newly created EC2 instance",
            "Value": {"Fn::GetAtt": ["Windows03", "PublicIp"]}
        },
        "Windows03ARN": {
            "Description": "Instance ARN",
            "Value": {"Fn::Join":["",["arn:aws:ec2:us-west-2:",{ "Ref": "AWS::AccountId" },":instance/",{ "Ref" : "Windows03" } ] ] }
        }
    }
}
