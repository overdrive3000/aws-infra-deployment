{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Master cloudformation template, this one use nested templates to create the whole stack",
  "Parameters": {
    "VPCCFTemplateURL": {
      "Description": "URL Template to create VPC the stack",
      "AllowedPattern": "^https?://[-a-zA-Z0-9+&@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&@#/%=~_|]",
      "ConstraintDescription": "must be a valid URL like https://s3-us-west-2.amazonaws.com/bucketname/file.json",
      "Type": "String"
    },
    "EC2CFTemplateURL": {
      "Description": "URL Template to create instances stack",
      "AllowedPattern": "^https?://[-a-zA-Z0-9+&@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&@#/%=~_|]",
      "ConstraintDescription": "must be a valid URL like https://s3-us-west-2.amazonaws.com/bucketname/file.json",
      "Type": "String"
    },
    "UsersCFTemplateURL": {
      "Description": "URL Template to create Users and Roles",
      "AllowedPattern": "^https?://[-a-zA-Z0-9+&@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&@#/%=~_|]",
      "ConstraintDescription": "must be a valid URL like https://s3-us-west-2.amazonaws.com/bucketname/file.json",
      "Type": "String"
    },
    "DBCFTemplateURL": {
      "Description": "URL Template to create RDS instance",
      "AllowedPattern": "^https?://[-a-zA-Z0-9+&@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&@#/%=~_|]",
      "ConstraintDescription": "must be a valid URL like https://s3-us-west-2.amazonaws.com/bucketname/file.json",
      "Type": "String"
    },
    "SubnetCIDR01": {
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x.",
      "Default": "172.17.1.0/24",
      "Description": "IP Address range for the Public Subnet 01",
      "MaxLength": "18",
      "MinLength": "9",
      "Type": "String"
    },
    "SubnetCIDR02": {
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x.",
      "Default": "172.17.2.0/24",
      "Description": "IP Address range for the Public Subnet 02",
      "MaxLength": "18",
      "MinLength": "9",
      "Type": "String"
    },
    "VPCCIDR": {
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x.",
      "Default": "172.17.0.0/16",
      "Description": "IP Address range for the VPC",
      "MaxLength": "18",
      "MinLength": "9",
      "Type": "String"
    },
    "WindowsAMIId": {
      "Description": "Windows AMI Id",
      "Default": "ami-4dbcb67d",
      "Type": "String"
    },
    "KeyPairName": {
      "Description": "Key pair to use in the instances",
      "Type": "String"
    },
    "Password01": {
      "NoEcho": "true",
      "Type": "String",
      "Description": "Password for User01",
      "MinLength": "8",
      "MaxLength": "41"
    },
    "Password02": {
      "NoEcho": "true",
      "Type": "String",
      "Description": "Password for User02",
      "MinLength": "8",
      "MaxLength": "41"
    },
    "Password03": {
      "NoEcho": "true",
      "Type": "String",
      "Description": "Password for User03",
      "MinLength": "8",
      "MaxLength": "41"
    },
    "DBName": {
      "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters.",
      "Default": "MyDatabase",
      "Description": "The database name",
      "MaxLength": "64",
      "MinLength": "1",
      "Type": "String"
    },
    "DBPassword": {
      "ConstraintDescription": "the password must be secure, please don't use simple words",
      "Description": "The database admin account password",
      "MaxLength": "41",
      "MinLength": "8",
      "NoEcho": true,
      "Type": "String"
    },
    "DBUser": {
      "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters.",
      "Description": "The database admin account username",
      "MaxLength": "16",
      "MinLength": "1",
      "Type": "String"
    }
  },
  "Resources": {
    "VPCStack": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": { "Ref": "VPCCFTemplateURL" },
        "Parameters": {
          "SubnetCIDR01": { "Ref": "SubnetCIDR01" },
          "SubnetCIDR02": { "Ref": "SubnetCIDR02" },
          "VPCCIDR": { "Ref": "VPCCIDR" }
        },
        "TimeoutInMinutes": "60"
      }
    },
    "EC2Stack": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": { "Ref": "EC2CFTemplateURL" },
        "Parameters": {
          "SubnetID": { "Fn::GetAtt": ["VPCStack", "Outputs.Subnet01"] },
          "SGId01": { "Fn::GetAtt": ["VPCStack", "Outputs.MySQLSG"] },
          "SGId02": { "Fn::GetAtt": ["VPCStack", "Outputs.RDPSG"] },
          "WindowsAMIId": { "Ref": "WindowsAMIId" },
          "KeyPairName": { "Ref": "KeyPairName" }
        },
        "TimeoutInMinutes": "60"
      }
    },
    "UserStack": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": { "Ref": "UsersCFTemplateURL" },
        "Parameters": {
          "Password01": { "Ref": "Password01" },
          "Password02": { "Ref": "Password02" },
          "Password03": { "Ref": "Password03" },
          "Windows01ARN": { "Fn::GetAtt": ["EC2Stack", "Outputs.Windows01ARN"] },
          "Windows02ARN": { "Fn::GetAtt": ["EC2Stack", "Outputs.Windows02ARN"] },
          "Windows03ARN": { "Fn::GetAtt": ["EC2Stack", "Outputs.Windows03ARN"] }
        }
      }
    },
    "DBStack": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": { "Ref": "DBCFTemplateURL" } ,
        "Parameters": {
          "DBName": { "Ref": "DBName" },
          "DBPassword": { "Ref": "DBPassword" },
          "DBUser": { "Ref": "DBUser" },
          "Subnets": { "Fn::Join": [ "", [ {"Fn::GetAtt": ["VPCStack", "Outputs.Subnet01"]},",", {"Fn::GetAtt": ["VPCStack", "Outputs.Subnet02"]} ] ] },
          "VpcId": { "Fn::GetAtt": ["VPCStack", "Outputs.VPCId"] },
          "VPCSecurityGroup": { "Fn::GetAtt": ["VPCStack", "Outputs.MySQLSG"] }
        }
      }
    }
  },
  "Outputs": {
    "VPCRef": {
      "Value": { "Ref": "VPCStack" }
    },
    "EC2Ref": {
      "Value": { "Ref": "EC2Stack" }
    }
  }
}
