{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "AWS CloudFormation Template to create two public Subnets is a custom VPC.",
    "Parameters": {
        "SubnetCIDR01": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x.",
            "Default": "172.17.1.0/24",
            "Description": "IP Address range for the VPC",
            "MaxLength": "18",
            "MinLength": "9",
            "Type": "String"
        },
        "SubnetCIDR02": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x.",
            "Default": "172.17.2.0/24",
            "Description": "IP Address range for the Public Subnet 01",
            "MaxLength": "18",
            "MinLength": "9",
            "Type": "String"
        },
        "VPCCIDR": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x.",
            "Default": "172.17.0.0/16",
            "Description": "IP Address range for the Public Subnet 02",
            "MaxLength": "18",
            "MinLength": "9",
            "Type": "String"
        }
    },
    "Resources": {
        "VPC": {
            "Properties": {
                "CidrBlock": {
                    "Ref": "VPCCIDR"
                },
                "EnableDnsHostnames": "true",
                "EnableDnsSupport": "true",
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": "Production VPC"
                    }
                ]
            },
            "Type": "AWS::EC2::VPC"
        },
        "Subnet01": {
            "Properties": {
                "CidrBlock": {
                    "Ref": "SubnetCIDR01"
                },
                "MapPublicIpOnLaunch": "true",
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": "Public Subnet 01"
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                },
                "AvailabilityZone": { "Fn::Select" : [ "0", { "Fn::GetAZs" : "" } ] }
            },
            "Type": "AWS::EC2::Subnet"
        },
        "Subnet02": {
            "Properties": {
                "CidrBlock": {
                    "Ref": "SubnetCIDR02"
                },
                "MapPublicIpOnLaunch": "true",
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": "Public Subnet 02"
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                },
                "AvailabilityZone": { "Fn::Select" : [ "1", { "Fn::GetAZs" : "" } ] }
            },
            "Type": "AWS::EC2::Subnet"
        },
        "InternetGateway": {
            "Properties": {
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    }
                ]
            },
            "Type" : "AWS::EC2::InternetGateway"
        },
        "AttachGateway": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties" : {
                "VpcId" : { "Ref" : "VPC" },
                "InternetGatewayId" : { "Ref" : "InternetGateway" }
            }
        },
        "RouteTable": {
            "Properties": {
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::RouteTable"
        },
        "Route": {
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "InternetGateway"
                },
                "RouteTableId": {
                    "Ref": "RouteTable"
                }
            },
            "Type": "AWS::EC2::Route"
        },
        "SubnetRouteTableAssociation01": {
            "Properties": {
                "RouteTableId": {
                    "Ref": "RouteTable"
                },
                "SubnetId": {
                    "Ref": "Subnet01"
                }
            },
            "Type": "AWS::EC2::SubnetRouteTableAssociation"
        },
        "SubnetRouteTableAssociation02": {
            "Properties": {
                "RouteTableId": {
                    "Ref": "RouteTable"
                },
                "SubnetId": {
                    "Ref": "Subnet02"
                }
            },
            "Type": "AWS::EC2::SubnetRouteTableAssociation"
        },
        "NetworkAcl": {
            "Properties": {
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::NetworkAcl"
        },
        "InboundNetworkAclEntry": {
            "Properties": {
                "CidrBlock": "0.0.0.0/0",
                "Egress": "false",
                "NetworkAclId": {
                    "Ref": "NetworkAcl"
                },
                "PortRange": {
                    "From": "0",
                    "To": "65535"
                },
                "Protocol": "6",
                "RuleAction": "allow",
                "RuleNumber": "100"
            },
            "Type": "AWS::EC2::NetworkAclEntry"
        },
        "OutBoundNetworkAclEntry": {
            "Properties": {
                "CidrBlock": "0.0.0.0/0",
                "Egress": "true",
                "NetworkAclId": {
                    "Ref": "NetworkAcl"
                },
                "PortRange": {
                    "From": "0",
                    "To": "65535"
                },
                "Protocol": "6",
                "RuleAction": "allow",
                "RuleNumber": "100"
            },
            "Type": "AWS::EC2::NetworkAclEntry"
        },
        "SubnetNetworkAclAssociation01": {
            "Properties": {
                "NetworkAclId": {
                    "Ref": "NetworkAcl"
                },
                "SubnetId": {
                    "Ref": "Subnet01"
                }
            },
            "Type": "AWS::EC2::SubnetNetworkAclAssociation"
        },
        "SubnetNetworkAclAssociation02": {
            "Properties": {
                "NetworkAclId": {
                    "Ref": "NetworkAcl"
                },
                "SubnetId": {
                    "Ref": "Subnet02"
                }
            },
            "Type": "AWS::EC2::SubnetNetworkAclAssociation"
        },
        "MySQLSecurityGroup": {
            "Properties": {
                "VpcId": { "Ref": "VPC" },
                "GroupDescription": "Enable MySQL access to the VPC Network",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "3306",
                        "ToPort": "3306",
                        "CidrIp": { "Ref": "VPCCIDR" }
                    }
                ]
            },
            "Type": "AWS::EC2::SecurityGroup"
        },
        "RDPSecurityGroup": {
            "Properties": {
                "VpcId": { "Ref": "VPC" },
                "GroupDescription": "Enable RDP access to the Internet",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "3389",
                        "ToPort": "3389",
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            },
            "Type": "AWS::EC2::SecurityGroup"
        }
    },
    "Outputs": {
        "Subnet01": {
            "Description": "SubnetId of Public Subnet 01",
            "Value": {
                "Ref": "Subnet01"
            }
        },
        "Subnet02": {
            "Description": "SubnetId of Public Subnet 02",
            "Value": {
                "Ref": "Subnet02"
            }
        },
        "VPCId": {
            "Description": "VPCId of the newly created VPC",
            "Value": {
                "Ref": "VPC"
            }
        },
        "MySQLSG": {
          "Description": "MySQLSecurityGroup ID",
          "Value": {
            "Ref": "MySQLSecurityGroup"
          } 
        },
        "RDPSG": {
          "Description": "RDPSecurityGroup ID",
          "Value": {
            "Ref": "RDPSecurityGroup"
          }
        }
    }
}
